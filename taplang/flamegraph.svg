<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1686" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1669.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1669.00"> </text><svg id="frames" x="10" width="1180" total_samples="908"><g><title>taplang`&lt;taplang::lexer::Token as logos::Logos&gt;::lex::goto3794_ctx3723_x (1 samples, 0.11%)</title><rect x="0.0000%" y="1525" width="0.1101%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1535.50"></text></g><g><title>taplang`core::fmt::Formatter::debug_tuple (2 samples, 0.22%)</title><rect x="0.1101%" y="1429" width="0.2203%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.3601%" y="1439.50"></text></g><g><title>taplang`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.22%)</title><rect x="0.1101%" y="1413" width="0.2203%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="2"/><text x="0.3601%" y="1423.50"></text></g><g><title>taplang`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.22%)</title><rect x="0.1101%" y="1397" width="0.2203%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.3601%" y="1407.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.11%)</title><rect x="0.3304%" y="1365" width="0.1101%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="1"/><text x="0.5804%" y="1375.50"></text></g><g><title>taplang`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.22%)</title><rect x="0.3304%" y="1381" width="0.2203%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="2"/><text x="0.5804%" y="1391.50"></text></g><g><title>taplang`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="0.4405%" y="1365" width="0.1101%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="0.6905%" y="1375.50"></text></g><g><title>taplang`core::slice::memchr::memrchr (1 samples, 0.11%)</title><rect x="0.4405%" y="1349" width="0.1101%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="1"/><text x="0.6905%" y="1359.50"></text></g><g><title>taplang`&lt;core::ops::range::Range&lt;Idx&gt; as core::fmt::Debug&gt;::fmt (3 samples, 0.33%)</title><rect x="0.3304%" y="1413" width="0.3304%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="3"/><text x="0.5804%" y="1423.50"></text></g><g><title>taplang`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (3 samples, 0.33%)</title><rect x="0.3304%" y="1397" width="0.3304%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="3"/><text x="0.5804%" y="1407.50"></text></g><g><title>taplang`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="0.5507%" y="1381" width="0.1101%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="1"/><text x="0.8007%" y="1391.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.11%)</title><rect x="0.7709%" y="1397" width="0.1101%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="1"/><text x="1.0209%" y="1407.50"></text></g><g><title>taplang`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.33%)</title><rect x="0.6608%" y="1413" width="0.3304%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="3"/><text x="0.9108%" y="1423.50"></text></g><g><title>taplang`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="0.8811%" y="1397" width="0.1101%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="1"/><text x="1.1311%" y="1407.50"></text></g><g><title>taplang`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (1 samples, 0.11%)</title><rect x="0.8811%" y="1381" width="0.1101%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="1"/><text x="1.1311%" y="1391.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.11%)</title><rect x="0.8811%" y="1365" width="0.1101%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="1"/><text x="1.1311%" y="1375.50"></text></g><g><title>taplang`core::fmt::Formatter::pad_integral (1 samples, 0.11%)</title><rect x="0.9912%" y="1413" width="0.1101%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="1"/><text x="1.2412%" y="1423.50"></text></g><g><title>taplang`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (4 samples, 0.44%)</title><rect x="1.1013%" y="1397" width="0.4405%" height="15" fill="rgb(210,31,41)" fg:x="10" fg:w="4"/><text x="1.3513%" y="1407.50"></text></g><g><title>taplang`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (4 samples, 0.44%)</title><rect x="1.1013%" y="1381" width="0.4405%" height="15" fill="rgb(221,200,47)" fg:x="10" fg:w="4"/><text x="1.3513%" y="1391.50"></text></g><g><title>taplang`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (3 samples, 0.33%)</title><rect x="1.2115%" y="1365" width="0.3304%" height="15" fill="rgb(226,26,5)" fg:x="11" fg:w="3"/><text x="1.4615%" y="1375.50"></text></g><g><title>libsystem_kernel.dylib`write (3 samples, 0.33%)</title><rect x="1.2115%" y="1349" width="0.3304%" height="15" fill="rgb(249,33,26)" fg:x="11" fg:w="3"/><text x="1.4615%" y="1359.50"></text></g><g><title>taplang`core::fmt::builders::DebugTuple::field (12 samples, 1.32%)</title><rect x="0.3304%" y="1429" width="1.3216%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="12"/><text x="0.5804%" y="1439.50"></text></g><g><title>taplang`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (5 samples, 0.55%)</title><rect x="1.1013%" y="1413" width="0.5507%" height="15" fill="rgb(221,5,38)" fg:x="10" fg:w="5"/><text x="1.3513%" y="1423.50"></text></g><g><title>taplang`core::fmt::Formatter::pad_integral (1 samples, 0.11%)</title><rect x="1.5419%" y="1397" width="0.1101%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="1"/><text x="1.7919%" y="1407.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.11%)</title><rect x="1.6520%" y="1397" width="0.1101%" height="15" fill="rgb(241,131,45)" fg:x="15" fg:w="1"/><text x="1.9020%" y="1407.50"></text></g><g><title>taplang`&lt;&amp;T as core::fmt::Debug&gt;::fmt (16 samples, 1.76%)</title><rect x="0.1101%" y="1445" width="1.7621%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="16"/><text x="0.3601%" y="1455.50"></text></g><g><title>taplang`core::fmt::builders::DebugTuple::finish (2 samples, 0.22%)</title><rect x="1.6520%" y="1429" width="0.2203%" height="15" fill="rgb(225,111,53)" fg:x="15" fg:w="2"/><text x="1.9020%" y="1439.50"></text></g><g><title>taplang`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.22%)</title><rect x="1.6520%" y="1413" width="0.2203%" height="15" fill="rgb(238,160,17)" fg:x="15" fg:w="2"/><text x="1.9020%" y="1423.50"></text></g><g><title>taplang`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="1.7621%" y="1397" width="0.1101%" height="15" fill="rgb(214,148,48)" fg:x="16" fg:w="1"/><text x="2.0121%" y="1407.50"></text></g><g><title>taplang`core::slice::memchr::memrchr (1 samples, 0.11%)</title><rect x="1.7621%" y="1381" width="0.1101%" height="15" fill="rgb(232,36,49)" fg:x="16" fg:w="1"/><text x="2.0121%" y="1391.50"></text></g><g><title>taplang`std::io::stdio::_print (17 samples, 1.87%)</title><rect x="0.1101%" y="1525" width="1.8722%" height="15" fill="rgb(209,103,24)" fg:x="1" fg:w="17"/><text x="0.3601%" y="1535.50">t..</text></g><g><title>taplang`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (17 samples, 1.87%)</title><rect x="0.1101%" y="1509" width="1.8722%" height="15" fill="rgb(229,88,8)" fg:x="1" fg:w="17"/><text x="0.3601%" y="1519.50">t..</text></g><g><title>taplang`core::fmt::write (17 samples, 1.87%)</title><rect x="0.1101%" y="1493" width="1.8722%" height="15" fill="rgb(213,181,19)" fg:x="1" fg:w="17"/><text x="0.3601%" y="1503.50">t..</text></g><g><title>taplang`&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (17 samples, 1.87%)</title><rect x="0.1101%" y="1477" width="1.8722%" height="15" fill="rgb(254,191,54)" fg:x="1" fg:w="17"/><text x="0.3601%" y="1487.50">t..</text></g><g><title>taplang`core::fmt::builders::DebugSet::entry (17 samples, 1.87%)</title><rect x="0.1101%" y="1461" width="1.8722%" height="15" fill="rgb(241,83,37)" fg:x="1" fg:w="17"/><text x="0.3601%" y="1471.50">t..</text></g><g><title>taplang`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="1.8722%" y="1445" width="0.1101%" height="15" fill="rgb(233,36,39)" fg:x="17" fg:w="1"/><text x="2.1222%" y="1455.50"></text></g><g><title>taplang`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="1.8722%" y="1429" width="0.1101%" height="15" fill="rgb(226,3,54)" fg:x="17" fg:w="1"/><text x="2.1222%" y="1439.50"></text></g><g><title>taplang`core::slice::memchr::memrchr (1 samples, 0.11%)</title><rect x="1.8722%" y="1413" width="0.1101%" height="15" fill="rgb(245,192,40)" fg:x="17" fg:w="1"/><text x="2.1222%" y="1423.50"></text></g><g><title>taplang`taplang::parser::Parser::expect (1 samples, 0.11%)</title><rect x="1.9824%" y="1509" width="0.1101%" height="15" fill="rgb(238,167,29)" fg:x="18" fg:w="1"/><text x="2.2324%" y="1519.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.11%)</title><rect x="2.0925%" y="1381" width="0.1101%" height="15" fill="rgb(232,182,51)" fg:x="19" fg:w="1"/><text x="2.3425%" y="1391.50"></text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (319 samples, 35.13%)</title><rect x="2.0925%" y="1493" width="35.1322%" height="15" fill="rgb(231,60,39)" fg:x="19" fg:w="319"/><text x="2.3425%" y="1503.50">taplang`taplang::parser::Parser::macroparse_operator_bina..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_add_sub (319 samples, 35.13%)</title><rect x="2.0925%" y="1477" width="35.1322%" height="15" fill="rgb(208,69,12)" fg:x="19" fg:w="319"/><text x="2.3425%" y="1487.50">taplang`taplang::parser::Parser::parse_expr_add_sub</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (319 samples, 35.13%)</title><rect x="2.0925%" y="1461" width="35.1322%" height="15" fill="rgb(235,93,37)" fg:x="19" fg:w="319"/><text x="2.3425%" y="1471.50">taplang`taplang::parser::Parser::macroparse_operator_bina..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_mult_div (319 samples, 35.13%)</title><rect x="2.0925%" y="1445" width="35.1322%" height="15" fill="rgb(213,116,39)" fg:x="19" fg:w="319"/><text x="2.3425%" y="1455.50">taplang`taplang::parser::Parser::parse_expr_mult_div</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (319 samples, 35.13%)</title><rect x="2.0925%" y="1429" width="35.1322%" height="15" fill="rgb(222,207,29)" fg:x="19" fg:w="319"/><text x="2.3425%" y="1439.50">taplang`taplang::parser::Parser::macroparse_operator_bina..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_uminus (319 samples, 35.13%)</title><rect x="2.0925%" y="1413" width="35.1322%" height="15" fill="rgb(206,96,30)" fg:x="19" fg:w="319"/><text x="2.3425%" y="1423.50">taplang`taplang::parser::Parser::parse_expr_uminus</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_unary_prefix_hom (319 samples, 35.13%)</title><rect x="2.0925%" y="1397" width="35.1322%" height="15" fill="rgb(218,138,4)" fg:x="19" fg:w="319"/><text x="2.3425%" y="1407.50">taplang`taplang::parser::Parser::macroparse_operator_unar..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_or (318 samples, 35.02%)</title><rect x="2.2026%" y="1381" width="35.0220%" height="15" fill="rgb(250,191,14)" fg:x="20" fg:w="318"/><text x="2.4526%" y="1391.50">taplang`taplang::parser::Parser::parse_expr_or</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (318 samples, 35.02%)</title><rect x="2.2026%" y="1365" width="35.0220%" height="15" fill="rgb(239,60,40)" fg:x="20" fg:w="318"/><text x="2.4526%" y="1375.50">taplang`taplang::parser::Parser::macroparse_operator_bina..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_and (318 samples, 35.02%)</title><rect x="2.2026%" y="1349" width="35.0220%" height="15" fill="rgb(206,27,48)" fg:x="20" fg:w="318"/><text x="2.4526%" y="1359.50">taplang`taplang::parser::Parser::parse_expr_and</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (318 samples, 35.02%)</title><rect x="2.2026%" y="1333" width="35.0220%" height="15" fill="rgb(225,35,8)" fg:x="20" fg:w="318"/><text x="2.4526%" y="1343.50">taplang`taplang::parser::Parser::macroparse_operator_bina..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_bang (318 samples, 35.02%)</title><rect x="2.2026%" y="1317" width="35.0220%" height="15" fill="rgb(250,213,24)" fg:x="20" fg:w="318"/><text x="2.4526%" y="1327.50">taplang`taplang::parser::Parser::parse_expr_bang</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_unary_prefix_hom (318 samples, 35.02%)</title><rect x="2.2026%" y="1301" width="35.0220%" height="15" fill="rgb(247,123,22)" fg:x="20" fg:w="318"/><text x="2.4526%" y="1311.50">taplang`taplang::parser::Parser::macroparse_operator_unar..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_index (318 samples, 35.02%)</title><rect x="2.2026%" y="1285" width="35.0220%" height="15" fill="rgb(231,138,38)" fg:x="20" fg:w="318"/><text x="2.4526%" y="1295.50">taplang`taplang::parser::Parser::parse_expr_index</text></g><g><title>taplang`taplang::parser::Parser::parse_lhs (318 samples, 35.02%)</title><rect x="2.2026%" y="1269" width="35.0220%" height="15" fill="rgb(231,145,46)" fg:x="20" fg:w="318"/><text x="2.4526%" y="1279.50">taplang`taplang::parser::Parser::parse_lhs</text></g><g><title>taplang`taplang::parser::Parser::expect (318 samples, 35.02%)</title><rect x="2.2026%" y="1253" width="35.0220%" height="15" fill="rgb(251,118,11)" fg:x="20" fg:w="318"/><text x="2.4526%" y="1263.50">taplang`taplang::parser::Parser::expect</text></g><g><title>taplang`taplang::parser::Parser::build_error (318 samples, 35.02%)</title><rect x="2.2026%" y="1237" width="35.0220%" height="15" fill="rgb(217,147,25)" fg:x="20" fg:w="318"/><text x="2.4526%" y="1247.50">taplang`taplang::parser::Parser::build_error</text></g><g><title>taplang`core::slice::memchr::memchr_aligned (229 samples, 25.22%)</title><rect x="12.0044%" y="1221" width="25.2203%" height="15" fill="rgb(247,81,37)" fg:x="109" fg:w="229"/><text x="12.2544%" y="1231.50">taplang`core::slice::memchr::memchr_alig..</text></g><g><title>taplang`alloc::fmt::format::format_inner (1 samples, 0.11%)</title><rect x="37.2247%" y="1173" width="0.1101%" height="15" fill="rgb(209,12,38)" fg:x="338" fg:w="1"/><text x="37.4747%" y="1183.50"></text></g><g><title>taplang`core::fmt::write (1 samples, 0.11%)</title><rect x="37.2247%" y="1157" width="0.1101%" height="15" fill="rgb(227,1,9)" fg:x="338" fg:w="1"/><text x="37.4747%" y="1167.50"></text></g><g><title>taplang`core::fmt::write (1 samples, 0.11%)</title><rect x="37.2247%" y="1141" width="0.1101%" height="15" fill="rgb(248,47,43)" fg:x="338" fg:w="1"/><text x="37.4747%" y="1151.50"></text></g><g><title>taplang`core::ops::function::FnOnce::call_once (45 samples, 4.96%)</title><rect x="37.2247%" y="1445" width="4.9559%" height="15" fill="rgb(221,10,30)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1455.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (45 samples, 4.96%)</title><rect x="37.2247%" y="1429" width="4.9559%" height="15" fill="rgb(210,229,1)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1439.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_add_sub (45 samples, 4.96%)</title><rect x="37.2247%" y="1413" width="4.9559%" height="15" fill="rgb(222,148,37)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1423.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (45 samples, 4.96%)</title><rect x="37.2247%" y="1397" width="4.9559%" height="15" fill="rgb(234,67,33)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1407.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_mult_div (45 samples, 4.96%)</title><rect x="37.2247%" y="1381" width="4.9559%" height="15" fill="rgb(247,98,35)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1391.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (45 samples, 4.96%)</title><rect x="37.2247%" y="1365" width="4.9559%" height="15" fill="rgb(247,138,52)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1375.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_uminus (45 samples, 4.96%)</title><rect x="37.2247%" y="1349" width="4.9559%" height="15" fill="rgb(213,79,30)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1359.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_unary_prefix_hom (45 samples, 4.96%)</title><rect x="37.2247%" y="1333" width="4.9559%" height="15" fill="rgb(246,177,23)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1343.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_or (45 samples, 4.96%)</title><rect x="37.2247%" y="1317" width="4.9559%" height="15" fill="rgb(230,62,27)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1327.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (45 samples, 4.96%)</title><rect x="37.2247%" y="1301" width="4.9559%" height="15" fill="rgb(216,154,8)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1311.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_and (45 samples, 4.96%)</title><rect x="37.2247%" y="1285" width="4.9559%" height="15" fill="rgb(244,35,45)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1295.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (45 samples, 4.96%)</title><rect x="37.2247%" y="1269" width="4.9559%" height="15" fill="rgb(251,115,12)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1279.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_bang (45 samples, 4.96%)</title><rect x="37.2247%" y="1253" width="4.9559%" height="15" fill="rgb(240,54,50)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1263.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_unary_prefix_hom (45 samples, 4.96%)</title><rect x="37.2247%" y="1237" width="4.9559%" height="15" fill="rgb(233,84,52)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1247.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_index (45 samples, 4.96%)</title><rect x="37.2247%" y="1221" width="4.9559%" height="15" fill="rgb(207,117,47)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1231.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_lhs (45 samples, 4.96%)</title><rect x="37.2247%" y="1205" width="4.9559%" height="15" fill="rgb(249,43,39)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1215.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::expect (45 samples, 4.96%)</title><rect x="37.2247%" y="1189" width="4.9559%" height="15" fill="rgb(209,38,44)" fg:x="338" fg:w="45"/><text x="37.4747%" y="1199.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::build_error (44 samples, 4.85%)</title><rect x="37.3348%" y="1173" width="4.8458%" height="15" fill="rgb(236,212,23)" fg:x="339" fg:w="44"/><text x="37.5848%" y="1183.50">taplan..</text></g><g><title>taplang`core::slice::memchr::memchr_aligned (33 samples, 3.63%)</title><rect x="38.5463%" y="1157" width="3.6344%" height="15" fill="rgb(242,79,21)" fg:x="350" fg:w="33"/><text x="38.7963%" y="1167.50">tapl..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_wrap_delimiters (367 samples, 40.42%)</title><rect x="37.2247%" y="1493" width="40.4185%" height="15" fill="rgb(211,96,35)" fg:x="338" fg:w="367"/><text x="37.4747%" y="1503.50">taplang`taplang::parser::Parser::macroparse_wrap_delimiters</text></g><g><title>taplang`taplang::parser::Parser::parse_command (367 samples, 40.42%)</title><rect x="37.2247%" y="1477" width="40.4185%" height="15" fill="rgb(253,215,40)" fg:x="338" fg:w="367"/><text x="37.4747%" y="1487.50">taplang`taplang::parser::Parser::parse_command</text></g><g><title>taplang`taplang::parser::Parser::parse_command_atom (367 samples, 40.42%)</title><rect x="37.2247%" y="1461" width="40.4185%" height="15" fill="rgb(211,81,21)" fg:x="338" fg:w="367"/><text x="37.4747%" y="1471.50">taplang`taplang::parser::Parser::parse_command_atom</text></g><g><title>taplang`taplang::parser::Parser::parse_lhs (322 samples, 35.46%)</title><rect x="42.1806%" y="1445" width="35.4626%" height="15" fill="rgb(208,190,38)" fg:x="383" fg:w="322"/><text x="42.4306%" y="1455.50">taplang`taplang::parser::Parser::parse_lhs</text></g><g><title>taplang`taplang::parser::Parser::expect (322 samples, 35.46%)</title><rect x="42.1806%" y="1429" width="35.4626%" height="15" fill="rgb(235,213,38)" fg:x="383" fg:w="322"/><text x="42.4306%" y="1439.50">taplang`taplang::parser::Parser::expect</text></g><g><title>taplang`taplang::parser::Parser::build_error (322 samples, 35.46%)</title><rect x="42.1806%" y="1413" width="35.4626%" height="15" fill="rgb(237,122,38)" fg:x="383" fg:w="322"/><text x="42.4306%" y="1423.50">taplang`taplang::parser::Parser::build_error</text></g><g><title>taplang`core::slice::memchr::memchr_aligned (242 samples, 26.65%)</title><rect x="50.9912%" y="1397" width="26.6520%" height="15" fill="rgb(244,218,35)" fg:x="463" fg:w="242"/><text x="51.2412%" y="1407.50">taplang`core::slice::memchr::memchr_aligned</text></g><g><title>taplang`alloc::fmt::format::format_inner (1 samples, 0.11%)</title><rect x="77.6432%" y="1445" width="0.1101%" height="15" fill="rgb(240,68,47)" fg:x="705" fg:w="1"/><text x="77.8932%" y="1455.50"></text></g><g><title>taplang`core::fmt::write (1 samples, 0.11%)</title><rect x="77.6432%" y="1429" width="0.1101%" height="15" fill="rgb(210,16,53)" fg:x="705" fg:w="1"/><text x="77.8932%" y="1439.50"></text></g><g><title>taplang`&lt;taplang::lexer::Token as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="77.6432%" y="1413" width="0.1101%" height="15" fill="rgb(235,124,12)" fg:x="705" fg:w="1"/><text x="77.8932%" y="1423.50"></text></g><g><title>taplang`core::fmt::write (1 samples, 0.11%)</title><rect x="77.6432%" y="1397" width="0.1101%" height="15" fill="rgb(224,169,11)" fg:x="705" fg:w="1"/><text x="77.8932%" y="1407.50"></text></g><g><title>taplang`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="77.6432%" y="1381" width="0.1101%" height="15" fill="rgb(250,166,2)" fg:x="705" fg:w="1"/><text x="77.8932%" y="1391.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.11%)</title><rect x="77.7533%" y="1221" width="0.1101%" height="15" fill="rgb(242,216,29)" fg:x="706" fg:w="1"/><text x="78.0033%" y="1231.50"></text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (42 samples, 4.63%)</title><rect x="77.7533%" y="1445" width="4.6256%" height="15" fill="rgb(230,116,27)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1455.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_add_sub (42 samples, 4.63%)</title><rect x="77.7533%" y="1429" width="4.6256%" height="15" fill="rgb(228,99,48)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1439.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (42 samples, 4.63%)</title><rect x="77.7533%" y="1413" width="4.6256%" height="15" fill="rgb(253,11,6)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1423.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_mult_div (42 samples, 4.63%)</title><rect x="77.7533%" y="1397" width="4.6256%" height="15" fill="rgb(247,143,39)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1407.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (42 samples, 4.63%)</title><rect x="77.7533%" y="1381" width="4.6256%" height="15" fill="rgb(236,97,10)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1391.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_uminus (42 samples, 4.63%)</title><rect x="77.7533%" y="1365" width="4.6256%" height="15" fill="rgb(233,208,19)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1375.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_unary_prefix_hom (42 samples, 4.63%)</title><rect x="77.7533%" y="1349" width="4.6256%" height="15" fill="rgb(216,164,2)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1359.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_or (42 samples, 4.63%)</title><rect x="77.7533%" y="1333" width="4.6256%" height="15" fill="rgb(220,129,5)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1343.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (42 samples, 4.63%)</title><rect x="77.7533%" y="1317" width="4.6256%" height="15" fill="rgb(242,17,10)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1327.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_and (42 samples, 4.63%)</title><rect x="77.7533%" y="1301" width="4.6256%" height="15" fill="rgb(242,107,0)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1311.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (42 samples, 4.63%)</title><rect x="77.7533%" y="1285" width="4.6256%" height="15" fill="rgb(251,28,31)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1295.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_bang (42 samples, 4.63%)</title><rect x="77.7533%" y="1269" width="4.6256%" height="15" fill="rgb(233,223,10)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1279.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_unary_prefix_hom (42 samples, 4.63%)</title><rect x="77.7533%" y="1253" width="4.6256%" height="15" fill="rgb(215,21,27)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1263.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_index (42 samples, 4.63%)</title><rect x="77.7533%" y="1237" width="4.6256%" height="15" fill="rgb(232,23,21)" fg:x="706" fg:w="42"/><text x="78.0033%" y="1247.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::parse_lhs (41 samples, 4.52%)</title><rect x="77.8634%" y="1221" width="4.5154%" height="15" fill="rgb(244,5,23)" fg:x="707" fg:w="41"/><text x="78.1134%" y="1231.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::expect (41 samples, 4.52%)</title><rect x="77.8634%" y="1205" width="4.5154%" height="15" fill="rgb(226,81,46)" fg:x="707" fg:w="41"/><text x="78.1134%" y="1215.50">tapla..</text></g><g><title>taplang`taplang::parser::Parser::build_error (41 samples, 4.52%)</title><rect x="77.8634%" y="1189" width="4.5154%" height="15" fill="rgb(247,70,30)" fg:x="707" fg:w="41"/><text x="78.1134%" y="1199.50">tapla..</text></g><g><title>taplang`core::slice::memchr::memchr_aligned (28 samples, 3.08%)</title><rect x="79.2952%" y="1173" width="3.0837%" height="15" fill="rgb(212,68,19)" fg:x="720" fg:w="28"/><text x="79.5452%" y="1183.50">tap..</text></g><g><title>taplang`taplang::parser::Parser::parse_kexpr (43 samples, 4.74%)</title><rect x="82.3789%" y="1413" width="4.7357%" height="15" fill="rgb(240,187,13)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1423.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_wrap_delimiters (43 samples, 4.74%)</title><rect x="82.3789%" y="1397" width="4.7357%" height="15" fill="rgb(223,113,26)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1407.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (43 samples, 4.74%)</title><rect x="82.3789%" y="1381" width="4.7357%" height="15" fill="rgb(206,192,2)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1391.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_add_sub (43 samples, 4.74%)</title><rect x="82.3789%" y="1365" width="4.7357%" height="15" fill="rgb(241,108,4)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1375.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (43 samples, 4.74%)</title><rect x="82.3789%" y="1349" width="4.7357%" height="15" fill="rgb(247,173,49)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1359.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_mult_div (43 samples, 4.74%)</title><rect x="82.3789%" y="1333" width="4.7357%" height="15" fill="rgb(224,114,35)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1343.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (43 samples, 4.74%)</title><rect x="82.3789%" y="1317" width="4.7357%" height="15" fill="rgb(245,159,27)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1327.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_uminus (43 samples, 4.74%)</title><rect x="82.3789%" y="1301" width="4.7357%" height="15" fill="rgb(245,172,44)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1311.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_unary_prefix_hom (43 samples, 4.74%)</title><rect x="82.3789%" y="1285" width="4.7357%" height="15" fill="rgb(236,23,11)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1295.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_or (43 samples, 4.74%)</title><rect x="82.3789%" y="1269" width="4.7357%" height="15" fill="rgb(205,117,38)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1279.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (43 samples, 4.74%)</title><rect x="82.3789%" y="1253" width="4.7357%" height="15" fill="rgb(237,72,25)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1263.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_and (43 samples, 4.74%)</title><rect x="82.3789%" y="1237" width="4.7357%" height="15" fill="rgb(244,70,9)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1247.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_binary_infix_left_assoc (43 samples, 4.74%)</title><rect x="82.3789%" y="1221" width="4.7357%" height="15" fill="rgb(217,125,39)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1231.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_bang (43 samples, 4.74%)</title><rect x="82.3789%" y="1205" width="4.7357%" height="15" fill="rgb(235,36,10)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1215.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_operator_unary_prefix_hom (43 samples, 4.74%)</title><rect x="82.3789%" y="1189" width="4.7357%" height="15" fill="rgb(251,123,47)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1199.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_expr_index (43 samples, 4.74%)</title><rect x="82.3789%" y="1173" width="4.7357%" height="15" fill="rgb(221,13,13)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1183.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::parse_lhs (43 samples, 4.74%)</title><rect x="82.3789%" y="1157" width="4.7357%" height="15" fill="rgb(238,131,9)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1167.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::expect (43 samples, 4.74%)</title><rect x="82.3789%" y="1141" width="4.7357%" height="15" fill="rgb(211,50,8)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1151.50">taplan..</text></g><g><title>taplang`taplang::parser::Parser::build_error (43 samples, 4.74%)</title><rect x="82.3789%" y="1125" width="4.7357%" height="15" fill="rgb(245,182,24)" fg:x="748" fg:w="43"/><text x="82.6289%" y="1135.50">taplan..</text></g><g><title>taplang`core::slice::memchr::memchr_aligned (24 samples, 2.64%)</title><rect x="84.4714%" y="1109" width="2.6432%" height="15" fill="rgb(242,14,37)" fg:x="767" fg:w="24"/><text x="84.7214%" y="1119.50">ta..</text></g><g><title>taplang`taplang::parser::Parser::parse_decl::implfxns (123 samples, 13.55%)</title><rect x="77.6432%" y="1493" width="13.5463%" height="15" fill="rgb(246,228,12)" fg:x="705" fg:w="123"/><text x="77.8932%" y="1503.50">taplang`taplang::par..</text></g><g><title>taplang`taplang::parser::Parser::parse_impl_function (123 samples, 13.55%)</title><rect x="77.6432%" y="1477" width="13.5463%" height="15" fill="rgb(213,55,15)" fg:x="705" fg:w="123"/><text x="77.8932%" y="1487.50">taplang`taplang::par..</text></g><g><title>taplang`taplang::parser::Parser::macroparse_wrap_delimiters (123 samples, 13.55%)</title><rect x="77.6432%" y="1461" width="13.5463%" height="15" fill="rgb(209,9,3)" fg:x="705" fg:w="123"/><text x="77.8932%" y="1471.50">taplang`taplang::par..</text></g><g><title>taplang`taplang::parser::Parser::parse_kcommand (80 samples, 8.81%)</title><rect x="82.3789%" y="1445" width="8.8106%" height="15" fill="rgb(230,59,30)" fg:x="748" fg:w="80"/><text x="82.6289%" y="1455.50">taplang`tapl..</text></g><g><title>taplang`taplang::parser::Parser::parse_kcommand_atom (80 samples, 8.81%)</title><rect x="82.3789%" y="1429" width="8.8106%" height="15" fill="rgb(209,121,21)" fg:x="748" fg:w="80"/><text x="82.6289%" y="1439.50">taplang`tapl..</text></g><g><title>taplang`taplang::parser::Parser::parse_lhs (37 samples, 4.07%)</title><rect x="87.1145%" y="1413" width="4.0749%" height="15" fill="rgb(220,109,13)" fg:x="791" fg:w="37"/><text x="87.3645%" y="1423.50">tapl..</text></g><g><title>taplang`taplang::parser::Parser::expect (37 samples, 4.07%)</title><rect x="87.1145%" y="1397" width="4.0749%" height="15" fill="rgb(232,18,1)" fg:x="791" fg:w="37"/><text x="87.3645%" y="1407.50">tapl..</text></g><g><title>taplang`taplang::parser::Parser::build_error (37 samples, 4.07%)</title><rect x="87.1145%" y="1381" width="4.0749%" height="15" fill="rgb(215,41,42)" fg:x="791" fg:w="37"/><text x="87.3645%" y="1391.50">tapl..</text></g><g><title>taplang`core::slice::memchr::memchr_aligned (28 samples, 3.08%)</title><rect x="88.1057%" y="1365" width="3.0837%" height="15" fill="rgb(224,123,36)" fg:x="800" fg:w="28"/><text x="88.3557%" y="1375.50">tap..</text></g><g><title>dyld`start (906 samples, 99.78%)</title><rect x="0.0000%" y="1621" width="99.7797%" height="15" fill="rgb(240,125,3)" fg:x="0" fg:w="906"/><text x="0.2500%" y="1631.50">dyld`start</text></g><g><title>taplang`main (906 samples, 99.78%)</title><rect x="0.0000%" y="1605" width="99.7797%" height="15" fill="rgb(205,98,50)" fg:x="0" fg:w="906"/><text x="0.2500%" y="1615.50">taplang`main</text></g><g><title>taplang`std::rt::lang_start_internal (906 samples, 99.78%)</title><rect x="0.0000%" y="1589" width="99.7797%" height="15" fill="rgb(205,185,37)" fg:x="0" fg:w="906"/><text x="0.2500%" y="1599.50">taplang`std::rt::lang_start_internal</text></g><g><title>taplang`std::rt::lang_start::_{{closure}} (906 samples, 99.78%)</title><rect x="0.0000%" y="1573" width="99.7797%" height="15" fill="rgb(238,207,15)" fg:x="0" fg:w="906"/><text x="0.2500%" y="1583.50">taplang`std::rt::lang_start::_{{closure}}</text></g><g><title>taplang`std::sys::backtrace::__rust_begin_short_backtrace (906 samples, 99.78%)</title><rect x="0.0000%" y="1557" width="99.7797%" height="15" fill="rgb(213,199,42)" fg:x="0" fg:w="906"/><text x="0.2500%" y="1567.50">taplang`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>taplang`taplang::main (906 samples, 99.78%)</title><rect x="0.0000%" y="1541" width="99.7797%" height="15" fill="rgb(235,201,11)" fg:x="0" fg:w="906"/><text x="0.2500%" y="1551.50">taplang`taplang::main</text></g><g><title>taplang`taplang::parser::Parser::parse_command (888 samples, 97.80%)</title><rect x="1.9824%" y="1525" width="97.7974%" height="15" fill="rgb(207,46,11)" fg:x="18" fg:w="888"/><text x="2.2324%" y="1535.50">taplang`taplang::parser::Parser::parse_command</text></g><g><title>taplang`taplang::parser::Parser::parse_command_atom (887 samples, 97.69%)</title><rect x="2.0925%" y="1509" width="97.6872%" height="15" fill="rgb(241,35,35)" fg:x="19" fg:w="887"/><text x="2.3425%" y="1519.50">taplang`taplang::parser::Parser::parse_command_atom</text></g><g><title>taplang`taplang::parser::Parser::parse_lhs (78 samples, 8.59%)</title><rect x="91.1894%" y="1493" width="8.5903%" height="15" fill="rgb(243,32,47)" fg:x="828" fg:w="78"/><text x="91.4394%" y="1503.50">taplang`tapl..</text></g><g><title>taplang`taplang::parser::Parser::expect (78 samples, 8.59%)</title><rect x="91.1894%" y="1477" width="8.5903%" height="15" fill="rgb(247,202,23)" fg:x="828" fg:w="78"/><text x="91.4394%" y="1487.50">taplang`tapl..</text></g><g><title>taplang`taplang::parser::Parser::build_error (78 samples, 8.59%)</title><rect x="91.1894%" y="1461" width="8.5903%" height="15" fill="rgb(219,102,11)" fg:x="828" fg:w="78"/><text x="91.4394%" y="1471.50">taplang`tapl..</text></g><g><title>taplang`core::slice::memchr::memchr_aligned (54 samples, 5.95%)</title><rect x="93.8326%" y="1445" width="5.9471%" height="15" fill="rgb(243,110,44)" fg:x="852" fg:w="54"/><text x="94.0826%" y="1455.50">taplang`..</text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.11%)</title><rect x="99.7797%" y="1621" width="0.1101%" height="15" fill="rgb(222,74,54)" fg:x="906" fg:w="1"/><text x="100.0297%" y="1631.50"></text></g><g><title>all (908 samples, 100%)</title><rect x="0.0000%" y="1637" width="100.0000%" height="15" fill="rgb(216,99,12)" fg:x="0" fg:w="908"/><text x="0.2500%" y="1647.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1621" width="0.1101%" height="15" fill="rgb(226,22,26)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1631.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1605" width="0.1101%" height="15" fill="rgb(217,163,10)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1615.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1589" width="0.1101%" height="15" fill="rgb(213,25,53)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1599.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1573" width="0.1101%" height="15" fill="rgb(252,105,26)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1583.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1557" width="0.1101%" height="15" fill="rgb(220,39,43)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1567.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1541" width="0.1101%" height="15" fill="rgb(229,68,48)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1551.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1525" width="0.1101%" height="15" fill="rgb(252,8,32)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1535.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1509" width="0.1101%" height="15" fill="rgb(223,20,43)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1519.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1493" width="0.1101%" height="15" fill="rgb(229,81,49)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1503.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1477" width="0.1101%" height="15" fill="rgb(236,28,36)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1487.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1461" width="0.1101%" height="15" fill="rgb(249,185,26)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1471.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1445" width="0.1101%" height="15" fill="rgb(249,174,33)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1455.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1429" width="0.1101%" height="15" fill="rgb(233,201,37)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1439.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1413" width="0.1101%" height="15" fill="rgb(221,78,26)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1423.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1397" width="0.1101%" height="15" fill="rgb(250,127,30)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1407.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1381" width="0.1101%" height="15" fill="rgb(230,49,44)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1391.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1365" width="0.1101%" height="15" fill="rgb(229,67,23)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1375.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1349" width="0.1101%" height="15" fill="rgb(249,83,47)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1359.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1333" width="0.1101%" height="15" fill="rgb(215,43,3)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1343.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1317" width="0.1101%" height="15" fill="rgb(238,154,13)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1327.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1301" width="0.1101%" height="15" fill="rgb(219,56,2)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1311.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1285" width="0.1101%" height="15" fill="rgb(233,0,4)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1295.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1269" width="0.1101%" height="15" fill="rgb(235,30,7)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1279.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1253" width="0.1101%" height="15" fill="rgb(250,79,13)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1263.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1237" width="0.1101%" height="15" fill="rgb(211,146,34)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1247.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1221" width="0.1101%" height="15" fill="rgb(228,22,38)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1231.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1205" width="0.1101%" height="15" fill="rgb(235,168,5)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1215.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1189" width="0.1101%" height="15" fill="rgb(221,155,16)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1199.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1173" width="0.1101%" height="15" fill="rgb(215,215,53)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1183.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1157" width="0.1101%" height="15" fill="rgb(223,4,10)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1167.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1141" width="0.1101%" height="15" fill="rgb(234,103,6)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1151.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1125" width="0.1101%" height="15" fill="rgb(227,97,0)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1135.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1109" width="0.1101%" height="15" fill="rgb(234,150,53)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1119.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1093" width="0.1101%" height="15" fill="rgb(228,201,54)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1103.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1077" width="0.1101%" height="15" fill="rgb(222,22,37)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1087.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1061" width="0.1101%" height="15" fill="rgb(237,53,32)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1071.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1045" width="0.1101%" height="15" fill="rgb(233,25,53)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1055.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1029" width="0.1101%" height="15" fill="rgb(210,40,34)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1039.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="1013" width="0.1101%" height="15" fill="rgb(241,220,44)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1023.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="997" width="0.1101%" height="15" fill="rgb(235,28,35)" fg:x="907" fg:w="1"/><text x="100.1399%" y="1007.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="981" width="0.1101%" height="15" fill="rgb(210,56,17)" fg:x="907" fg:w="1"/><text x="100.1399%" y="991.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="965" width="0.1101%" height="15" fill="rgb(224,130,29)" fg:x="907" fg:w="1"/><text x="100.1399%" y="975.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="949" width="0.1101%" height="15" fill="rgb(235,212,8)" fg:x="907" fg:w="1"/><text x="100.1399%" y="959.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="933" width="0.1101%" height="15" fill="rgb(223,33,50)" fg:x="907" fg:w="1"/><text x="100.1399%" y="943.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="917" width="0.1101%" height="15" fill="rgb(219,149,13)" fg:x="907" fg:w="1"/><text x="100.1399%" y="927.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="901" width="0.1101%" height="15" fill="rgb(250,156,29)" fg:x="907" fg:w="1"/><text x="100.1399%" y="911.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="885" width="0.1101%" height="15" fill="rgb(216,193,19)" fg:x="907" fg:w="1"/><text x="100.1399%" y="895.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="869" width="0.1101%" height="15" fill="rgb(216,135,14)" fg:x="907" fg:w="1"/><text x="100.1399%" y="879.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="853" width="0.1101%" height="15" fill="rgb(241,47,5)" fg:x="907" fg:w="1"/><text x="100.1399%" y="863.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="837" width="0.1101%" height="15" fill="rgb(233,42,35)" fg:x="907" fg:w="1"/><text x="100.1399%" y="847.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="821" width="0.1101%" height="15" fill="rgb(231,13,6)" fg:x="907" fg:w="1"/><text x="100.1399%" y="831.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="805" width="0.1101%" height="15" fill="rgb(207,181,40)" fg:x="907" fg:w="1"/><text x="100.1399%" y="815.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="789" width="0.1101%" height="15" fill="rgb(254,173,49)" fg:x="907" fg:w="1"/><text x="100.1399%" y="799.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="773" width="0.1101%" height="15" fill="rgb(221,1,38)" fg:x="907" fg:w="1"/><text x="100.1399%" y="783.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="757" width="0.1101%" height="15" fill="rgb(206,124,46)" fg:x="907" fg:w="1"/><text x="100.1399%" y="767.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="741" width="0.1101%" height="15" fill="rgb(249,21,11)" fg:x="907" fg:w="1"/><text x="100.1399%" y="751.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="725" width="0.1101%" height="15" fill="rgb(222,201,40)" fg:x="907" fg:w="1"/><text x="100.1399%" y="735.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="709" width="0.1101%" height="15" fill="rgb(235,61,29)" fg:x="907" fg:w="1"/><text x="100.1399%" y="719.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="693" width="0.1101%" height="15" fill="rgb(219,207,3)" fg:x="907" fg:w="1"/><text x="100.1399%" y="703.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="677" width="0.1101%" height="15" fill="rgb(222,56,46)" fg:x="907" fg:w="1"/><text x="100.1399%" y="687.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="661" width="0.1101%" height="15" fill="rgb(239,76,54)" fg:x="907" fg:w="1"/><text x="100.1399%" y="671.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="645" width="0.1101%" height="15" fill="rgb(231,124,27)" fg:x="907" fg:w="1"/><text x="100.1399%" y="655.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="629" width="0.1101%" height="15" fill="rgb(249,195,6)" fg:x="907" fg:w="1"/><text x="100.1399%" y="639.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="613" width="0.1101%" height="15" fill="rgb(237,174,47)" fg:x="907" fg:w="1"/><text x="100.1399%" y="623.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="597" width="0.1101%" height="15" fill="rgb(206,201,31)" fg:x="907" fg:w="1"/><text x="100.1399%" y="607.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="581" width="0.1101%" height="15" fill="rgb(231,57,52)" fg:x="907" fg:w="1"/><text x="100.1399%" y="591.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="565" width="0.1101%" height="15" fill="rgb(248,177,22)" fg:x="907" fg:w="1"/><text x="100.1399%" y="575.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="549" width="0.1101%" height="15" fill="rgb(215,211,37)" fg:x="907" fg:w="1"/><text x="100.1399%" y="559.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="533" width="0.1101%" height="15" fill="rgb(241,128,51)" fg:x="907" fg:w="1"/><text x="100.1399%" y="543.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="517" width="0.1101%" height="15" fill="rgb(227,165,31)" fg:x="907" fg:w="1"/><text x="100.1399%" y="527.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="501" width="0.1101%" height="15" fill="rgb(228,167,24)" fg:x="907" fg:w="1"/><text x="100.1399%" y="511.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="485" width="0.1101%" height="15" fill="rgb(228,143,12)" fg:x="907" fg:w="1"/><text x="100.1399%" y="495.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="469" width="0.1101%" height="15" fill="rgb(249,149,8)" fg:x="907" fg:w="1"/><text x="100.1399%" y="479.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="453" width="0.1101%" height="15" fill="rgb(243,35,44)" fg:x="907" fg:w="1"/><text x="100.1399%" y="463.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="437" width="0.1101%" height="15" fill="rgb(246,89,9)" fg:x="907" fg:w="1"/><text x="100.1399%" y="447.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="421" width="0.1101%" height="15" fill="rgb(233,213,13)" fg:x="907" fg:w="1"/><text x="100.1399%" y="431.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="405" width="0.1101%" height="15" fill="rgb(233,141,41)" fg:x="907" fg:w="1"/><text x="100.1399%" y="415.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="389" width="0.1101%" height="15" fill="rgb(239,167,4)" fg:x="907" fg:w="1"/><text x="100.1399%" y="399.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="373" width="0.1101%" height="15" fill="rgb(209,217,16)" fg:x="907" fg:w="1"/><text x="100.1399%" y="383.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="357" width="0.1101%" height="15" fill="rgb(219,88,35)" fg:x="907" fg:w="1"/><text x="100.1399%" y="367.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="341" width="0.1101%" height="15" fill="rgb(220,193,23)" fg:x="907" fg:w="1"/><text x="100.1399%" y="351.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="325" width="0.1101%" height="15" fill="rgb(230,90,52)" fg:x="907" fg:w="1"/><text x="100.1399%" y="335.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="309" width="0.1101%" height="15" fill="rgb(252,106,19)" fg:x="907" fg:w="1"/><text x="100.1399%" y="319.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="293" width="0.1101%" height="15" fill="rgb(206,74,20)" fg:x="907" fg:w="1"/><text x="100.1399%" y="303.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="277" width="0.1101%" height="15" fill="rgb(230,138,44)" fg:x="907" fg:w="1"/><text x="100.1399%" y="287.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="261" width="0.1101%" height="15" fill="rgb(235,182,43)" fg:x="907" fg:w="1"/><text x="100.1399%" y="271.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="245" width="0.1101%" height="15" fill="rgb(242,16,51)" fg:x="907" fg:w="1"/><text x="100.1399%" y="255.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="229" width="0.1101%" height="15" fill="rgb(248,9,4)" fg:x="907" fg:w="1"/><text x="100.1399%" y="239.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="213" width="0.1101%" height="15" fill="rgb(210,31,22)" fg:x="907" fg:w="1"/><text x="100.1399%" y="223.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="197" width="0.1101%" height="15" fill="rgb(239,54,39)" fg:x="907" fg:w="1"/><text x="100.1399%" y="207.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="181" width="0.1101%" height="15" fill="rgb(230,99,41)" fg:x="907" fg:w="1"/><text x="100.1399%" y="191.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="165" width="0.1101%" height="15" fill="rgb(253,106,12)" fg:x="907" fg:w="1"/><text x="100.1399%" y="175.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="149" width="0.1101%" height="15" fill="rgb(213,46,41)" fg:x="907" fg:w="1"/><text x="100.1399%" y="159.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="133" width="0.1101%" height="15" fill="rgb(215,133,35)" fg:x="907" fg:w="1"/><text x="100.1399%" y="143.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="117" width="0.1101%" height="15" fill="rgb(213,28,5)" fg:x="907" fg:w="1"/><text x="100.1399%" y="127.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="101" width="0.1101%" height="15" fill="rgb(215,77,49)" fg:x="907" fg:w="1"/><text x="100.1399%" y="111.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="85" width="0.1101%" height="15" fill="rgb(248,100,22)" fg:x="907" fg:w="1"/><text x="100.1399%" y="95.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="69" width="0.1101%" height="15" fill="rgb(208,67,9)" fg:x="907" fg:w="1"/><text x="100.1399%" y="79.50"></text></g><g><title>taplang`core::ptr::drop_in_place&lt;(taplang::ast::Cmd&lt;()&gt;,core::ops::range::Range&lt;usize&gt;)&gt; (1 samples, 0.11%)</title><rect x="99.8899%" y="53" width="0.1101%" height="15" fill="rgb(219,133,21)" fg:x="907" fg:w="1"/><text x="100.1399%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.11%)</title><rect x="99.8899%" y="37" width="0.1101%" height="15" fill="rgb(246,46,29)" fg:x="907" fg:w="1"/><text x="100.1399%" y="47.50"></text></g></svg></svg>