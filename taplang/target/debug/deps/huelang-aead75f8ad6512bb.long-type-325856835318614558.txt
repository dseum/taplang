Choice<(DelimitedBy<Recursive<dyn chumsky::Parser<'_, &str, ast::Expr>>, Just<char, &str, chumsky::extra::Full<EmptyErr, (), ()>>, Just<char, &str, chumsky::extra::Full<EmptyErr, (), ()>>, char, char>, DelimitedBy<chumsky::combinator::Map<Collect<Repeated<Recursive<dyn chumsky::Parser<'_, &str, ast::Expr>>, ast::Expr, &str, chumsky::extra::Full<EmptyErr, (), ()>>, ast::Expr, Vec<ast::Expr>>, Vec<ast::Expr>, {closure@src/parser.rs:138:43: 138:54}>, Just<char, &str, chumsky::extra::Full<EmptyErr, (), ()>>, Just<char, &str, chumsky::extra::Full<EmptyErr, (), ()>>, char, char>, IgnoreThen<Padded<Just<char, &str, chumsky::extra::Full<EmptyErr, (), ()>>>, chumsky::combinator::Map<Padded<impl chumsky::Parser<'_, &str, <&str as SliceInput<'_>>::Slice> + std::marker::Copy>, String, fn(String) -> ast::Expr {ast::Expr::ImmutRef}>, char, chumsky::extra::Full<EmptyErr, (), ()>>, IgnoreThen<Padded<Just<&str, &str, chumsky::extra::Full<EmptyErr, (), ()>>>, chumsky::combinator::Map<Padded<impl chumsky::Parser<'_, &str, <&str as SliceInput<'_>>::Slice> + std::marker::Copy>, String, fn(String) -> ast::Expr {ast::Expr::MutRef}>, &str, chumsky::extra::Full<EmptyErr, (), ()>>, chumsky::combinator::Map<impl chumsky::Parser<'_, &str, ast::BoolExpr> + Clone, ast::BoolExpr, {closure@src/parser.rs:141:31: 141:34}>, chumsky::combinator::Map<impl chumsky::Parser<'_, &str, ast::ArithExpr> + Clone, ast::ArithExpr, {closure@src/parser.rs:142:32: 142:35}>)>
