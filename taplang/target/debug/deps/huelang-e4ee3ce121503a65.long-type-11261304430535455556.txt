Collect<Repeated<PaddedBy<MapWith<Choice<(chumsky::combinator::Map<impl chumsky::Parser<'_, &'src str, <&'src str as SliceInput<'_>>::Slice> + Copy, &str, {closure@src/lexer.rs:82:33: 82:47}>, Choice<(To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>)>, chumsky::combinator::Map<impl chumsky::Parser<'_, &'src str, <&'src str as SliceInput<'_>>::Slice> + Copy, &str, {closure@src/lexer.rs:97:46: 97:64}>)>, lexer::Token, {closure@src/lexer.rs:114:19: 114:27}>, Or<Or<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>>, Or<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>>>, &str>, Spanned<lexer::Token>, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, Spanned<lexer::Token>, Vec<lexer::Token>>
ThenIgnore<Collect<Repeated<PaddedBy<MapWith<Choice<(chumsky::combinator::Map<impl chumsky::Parser<'_, &'src str, <&'src str as SliceInput<'_>>::Slice> + Copy, &str, {closure@src/lexer.rs:82:33: 82:47}>, Choice<(To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>, To<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, &str, lexer::Token>)>, chumsky::combinator::Map<impl chumsky::Parser<'_, &'src str, <&'src str as SliceInput<'_>>::Slice> + Copy, &str, {closure@src/lexer.rs:97:46: 97:64}>)>, lexer::Token, {closure@src/lexer.rs:114:19: 114:27}>, Or<Or<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>>, Or<Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, Just<&str, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>>>, &str>, Spanned<lexer::Token>, &'src str, chumsky::extra::Full<EmptyErr, (), ()>>, Spanned<lexer::Token>, Vec<lexer::Token>>, chumsky::primitive::End<&'src str, chumsky::extra::Full<EmptyErr, (), ()>>, (), chumsky::extra::Full<EmptyErr, (), ()>>
ThenIgnore<Collect<Repeated<PaddedBy<MapWith<Choice<(chumsky::combinator::Map<impl chumsky::Parser<'_, _, <_ as SliceInput<'_>>::Slice, _> + Copy, &str, {closure@src/lexer.rs:82:33: 82:47}>, Choice<(To<Just<&str, _, _>, &str, lexer::Token>, To<Just<&str, _, _>, &str, lexer::Token>, To<Just<&str, _, _>, &str, lexer::Token>, To<Just<&str, _, _>, &str, lexer::Token>, To<Just<&str, _, _>, &str, lexer::Token>, To<Just<&str, _, _>, &str, lexer::Token>, To<Just<&str, _, _>, &str, lexer::Token>, To<Just<&str, _, _>, &str, lexer::Token>, To<Just<&str, _, _>, &str, lexer::Token>)>, chumsky::combinator::Map<impl chumsky::Parser<'_, _, <_ as SliceInput<'_>>::Slice, _> + Copy, &str, {closure@src/lexer.rs:97:46: 97:64}>)>, lexer::Token, {closure@src/lexer.rs:114:19: 114:27}>, Or<Or<Just<&str, _, _>, Just<&str, _, _>>, Or<Just<&str, _, _>, Just<&str, _, _>>>, &str>, Spanned<lexer::Token>, _, _>, Spanned<lexer::Token>, _>, chumsky::primitive::End<_, _>, (), _>
